smalltrip

条件
	１．nuxt+Vuetify
	２．内部contentまたは、HeadlessCMS（Contentful・microCMD）にてmdファイル
	３．NetlifyまたはVercelでデプロイ
	４．PC用の横メニューとハンバーガーメニュー
	５．問い合わせ
	６． SEO対策
	７．ロゴ・ファビコン
	８．ページングの実装				-->未実装
	９．ログイン機能				-->未実装
	10．サイトマップ

４．PC用の横メニューとハンバーガーメニュー
	Vuetifyでヘッダーメニューの作成①【サイドメニューとハンバーガーメニュー】
	https://yacchi-engineer.com/?p=1010

５．問い合わせ
	Nuxt.js のお問い合わせフォームに form.runを使う
	https://blog.proglearn.com/2021/01/12/nuxt-js-%E3%81%AE%E3%81%8A%E5%95%8F%E3%81%84%E5%90%88%E3%82%8F%E3%81%9B%E3%83%95%E3%82%A9%E3%83%BC%E3%83%A0%E3%81%AB-form-run%E3%82%92%E4%BD%BF%E3%81%86/
	Netlify Forms を Nuxt（SSR/SSG）で使う
	https://mykii.blog/nuxt-using-netlify-forms/
	NetlifyのForms機能を利用してお問合せフォームを作成する方法
	https://note.com/koushikagawa/n/naf6491e20cc3

２．内部contentまたは、HeadlessCMS（Contentful・microCMD）にてmdファイル
	microCMS + NuxtでJamstackブログを作ってみよう
	https://blog.microcms.io/microcms-nuxt-jamstack-blog/		nuxt-blog5
	Nuxt.js , microCMS ,Netlify の組み合わせでJAMstackなブログ開発
	https://nuxtblog.work/blog/d6_mxl1zs/				nuxt-blog3

６． SEO対策

	https://seolaboratory.jp/41560/

	DNS レコードでのドメイン所有権の確認
	smalltrip.netlify.app
	手順:
	1. ご利用のドメイン名プロバイダ（godaddy.com、namecheap.com など）にログインします
	2. 以下の TXT レコードを smalltrip.netlify.app の DNS 設定にコピーします
	google-site-verification=MJvIuxl6JMoOun3FFGHrTT2bvTjpIVfCeH625Mzbb9U
	3. 下の [確認] を押します
	注: DNS の変更が適用されるまでに時間がかかる場合があります。Search Console ですぐにレコードを確認できない場合は、1 日待ってからもう一度お試しください

８．ページングの実装
	NuxtのJamstack構成におけるページングの実装
	https://blog.microcms.io/nuxt-jamstack-paging/
	これは難しい。別の方法として、vuetifyのテーブルを使うことを研究する　-→　nuxt-table

10．サイトマップ
	Nuxtで静的ファイル生成時にサイトマップを生成する（microCMS対応）
	https://mykii.blog/nuxt-microcms-sitemap/


nuxt-blog5を基本に作成

1. Nuxtプロジェクトを用意する
	npx create-nuxt-app smalltrip

	? Project name: smalltrip
	? Programming language: JavaScript
	? Package manager: Npm
	? UI framework: Vuetify.js
	? Nuxt.js modules: Axios - Promise based HTTP client
	? Linting tools: (Press <space> to select, <a> to toggle all, <i> to invert selection)
	? Testing framework: None
	? Rendering mode: Universal (SSR / SSG)
	? Deployment target: Static (Static/Jamstack hosting)
	? Development tools: jsconfig.json (Recommended for VS Code if you're not using typescript)
	? What is your GitHub username? kfbk
	? Version control system: Git


	cd smalltrip
	npm run dev		 http://localhost:3000/

2. microCMSの用意する

	サービス名	smalltrip
	サービスID	smalltrip.microcms.io
	API名		ブログ
	エンドポイント	https://smalltrip.microcms.io/api/v1/blog
	APIキー		1ce395b74a0e4a3cb2633988335a49ee5515

3. ブログ一覧を表示する

	nuxt-blog3を参照に「.env」にAPIキーを入れる
	npm install --save @nuxtjs/dotenv 

4. ブログ詳細を表示する

	pages/ ディレクトリ以下に _slug/ ディレクトリを作成し、その中に index.vue を作成します

5. CSSで見た目を装飾する

	npm install node-sass@4.14.1 sass-loader@10.1.1		Vuetifyを使うので、中止

6. ビルドして静的ファイルを生成してみる

	npm run generate
	dist/ 配下に生成されたHTMLがある

7. ファイルをホスティングする

	GitHubでリポジトリを作成
		https://github.com/kfbk/smalltrip.git
	SourceTreeにて
		リポジトリを作成
		Commit　push
	Netlify
		buildCommand：	npm run generate
		Advanced build settingsからmicroCMSのAPIキーをValueに設定します
		https://agitated-galileo-fda371.netlify.app　--> https://smalltrip.netlify.app

8. microCMSとNetlifyを連携する

	microCMSの管理画面で記事を編集するだけで、公開されたサイトが自動で最新化される設定
	Netlifyにて
		Build hooks　：　Build hook name＝netlify_hook
		save --> https://api.netlify.com/build_hooks/61809f3062fa95248f84d893
	microCMS
		Webhook　：　上記BuildHookのURLを貼り付け

その他
	日付	https://devsakaso.com/nuxt-js-format-date/

--------------------------------------------------------------------------
2022/02/26 : login機能を付ける
　フォルダー「smalltrip-corona」にて、firebaseを使ったLoginを作った。これを参照する。
　ただし、firebaseはTest-modeで作り、30日以内に本番にするようなので、難しい
　なので、nuxtjs/authを使し、mongoDBを使うことにした。
　この実験用に、フォルダー「mongodb-sake」にて、クラウドのmongoDBにテーブルを作り、CRUDの実験した。
　次の事を順次、行った。

sourceTreeにて、Branchを追加。longin変更用とする

npm install @nuxtjs/auth

	これをインストールし、nuxt.config.jsに追加したら、エラー発生。直す方法が分からない。
